/* カレンダー全体をカード風に */
.calWrapper {
  background: #ffffffee;
  border-radius: 20px;
  padding: 20px;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
  max-width: min(420px, 100%);
  margin: 0 auto;
  backdrop-filter: blur(6px);

  /* 可変トークン（中央重ね用に少し大きめ） */
  --tile-gap: clamp(2px, 1.2vw, 6px);
  --tile-pad-top: clamp(2px, 1vw, 6px);
  --tile-pad-bottom: clamp(6px, 2vw, 12px);
  --abbr-size: clamp(0.8rem, 2.8vw, 0.95rem);
  --weekday-size: clamp(0.7rem, 2.4vw, 0.85rem);

  /* 中央アイコンのサイズ（ここを触れば一括調整） */
  --cal-icon: clamp(36px, 9vw, 56px);
}

/* ヘッダー：年月と矢印ボタン */
.header {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 12px;
  margin-bottom: 12px;
}

.title {
  font-size: 1.2rem;
  font-weight: 700;
  color: #0077a7;
  letter-spacing: 0.5px;
}

.header button {
  width: 36px;
  height: 36px;
  display: grid;
  place-items: center;
  border-radius: 50%;
  border: none;
  background: linear-gradient(135deg, #aee9ff, #6cd4ff);
  color: #fff;
  font-size: 20px;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.1s ease, filter 0.2s ease;
  box-shadow: 0 4px 10px rgba(0, 119, 167, 0.25);
}
.header button:hover { filter: brightness(1.05); }
.header button:active { transform: scale(0.92); }

/* ===== react-calendar の上書き ===== */
:global(.react-calendar) {
  width: 100%;
  border: none;
  background: transparent;
  font-family: inherit;
}

/* 曜日 */
:global(.react-calendar__month-view__weekdays) {
  text-transform: none;
  font-weight: 600;
  color: #7a94a3;
  font-size: var(--weekday-size);
  margin-bottom: 4px;
}

/* 「◯日」の“日”を打ち消し（保険） */
:global(.react-calendar__month-view__days__day abbr)::after,
:global(.react-calendar__tile abbr)::after {
  content: none !important;
}

/* 日付セル：正方形＋余白広め */
:global(.react-calendar__tile) {
  position: relative;
  border: none;
  border-radius: 12px;
  aspect-ratio: 1 / 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--abbr-size);
  transition: all 0.2s ease;
  margin: var(--tile-gap);
  padding-top: var(--tile-pad-top);
  padding-bottom: var(--tile-pad-bottom);
}

/* 数字を“必ず”ド真ん中に（端末差でズレないよう幅100%を保証） */
:global(.react-calendar__tile abbr){
  display: inline-block;
  width: 100%;
  text-align: center;
  line-height: 1;
  letter-spacing: .02em;
}

/* ホバー */
:global(.react-calendar__tile:enabled:hover) {
  background: #e6f9ff;
  border-radius: 50%;
  transform: translateY(-2px);
  box-shadow: 0 3px 8px rgba(0, 119, 167, 0.15);
  color: #0077a7;
  cursor: pointer;
}

/* 今日 */
:global(.react-calendar__tile--now) {
  background: linear-gradient(135deg, #9ae8ff, #5ad1ff);
  color: #fff;
  font-weight: 700;
  border-radius: 50%;
}

/* 記録がない日は薄く */
.noData { opacity: 0.6; }

/* 数値スタンプ時代のラベル（未使用なら削除OK） */
.dot {
  position: absolute;
  bottom: 6px;
  left: 50%;
  transform: translateX(-50%);
  min-width: 22px;
  height: 22px;
  border-radius: 50%;
  background: #c6f3ff;
  color: #0077a7;
  font-size: 0.7rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: inset 0 1px 3px rgba(0, 119, 167, 0.25);
}

/* アクティブ（内部選択時） */
:global(.react-calendar__tile--active) {
  background: #00a4d6 !important;
  color: #fff !important;
  border-radius: 50%;
}

/* 他月の日付は薄く */
:global(.react-calendar__month-view__days__day--neighboringMonth) {
  opacity: 0.35;
}

/* 未来日は無効 */
:global(.react-calendar__tile:disabled) {
  opacity: 0.4;
  cursor: not-allowed;
}

/* 年月の表示部分 */
.title {
  background: #fff;
  color: #333;
  padding: 6px 20px;
  border-radius: 9999px;
  font-weight: 600;
  font-size: 16px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.15);
}

/* タイルを重ね合わせの基準に */
.tile { position: relative; }

/* ── 中央重ね：PNGアイコンをど真ん中に固定 ── */
.iconCenter{
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  pointer-events: none;  /* クリック妨げない */
  z-index: 1;            /* 数字より前面 */
}
.iconCenterImg{
  display: block;
  width: var(--cal-icon);
  height: var(--cal-icon);
  object-fit: contain;
  image-rendering: auto;
}

/* アイコンがある日の数字は、ほんの少しだけ控えめに（視認性UP） */
.hasIcon :global(abbr){
  transform: translateY(1px);
  opacity: 0.95;
}
